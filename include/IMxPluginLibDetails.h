#pragma once
//=====================================================================================================================================================
//IMxPluginLibDetails.h - MxPlugin Std Lib interface - DO NOT EDIT THIS FILE
//=====================================================================================================================================================

#include "IMxPluginBase.h"
#include "MxUtils\MxError1.h"

static const GUID IMxPluginLibDetailsGUID = { 0xe9c3d857, 0xf826, 0x4802, { 0xb3, 0x3d, 0x4b, 0x99, 0xa4, 0xb5, 0x16, 0x64 } };  // {E9C3D857-F826-4802-B33D-4B99A4B51664}
class IMxPluginLibDetailsIID
{
public:
	static const GUID		  Guid() { return IMxPluginLibDetailsGUID; }
	static const char * const Name() { return "IMxPluginLibDetails"; }
};

class  IMxPluginLibDetails :  public IMxPluginBase
{
public:

virtual const char *MXSTDMETHOD GetLibName(void) = 0;					//VS_VERSION_INFO::ProductName 
virtual const char *MXSTDMETHOD GetLibVersion(void) = 0;				//VS_VERSION_INFO::ProductVersion
virtual const char *MXSTDMETHOD GetLibOwnerName(void) = 0;				//VS_VERSION_INFO::CompanyName
virtual const char *MXSTDMETHOD GetLibCopyrightNotice(void) = 0;		//VS_VERSION_INFO::LegalCopyright
virtual const char *MXSTDMETHOD GetLibDescription(void) = 0;			//VS_VERSION_INFO::FileDescription
virtual const char *MXSTDMETHOD GetLibID(void) = 0;						//VS_VERSION_INFO::InternalName GUID - same as its folder name in PluginRootFolder - change this only if contract changes, not when changing Product Version
virtual const char *MXSTDMETHOD GetLibSupportSite(void) = 0;			//http://mxplugin.codeplex.com/
virtual const char *MXSTDMETHOD GetLibLicenseName(void) = 0;			//Codeplex Open Source
virtual const char *MXSTDMETHOD GetLibLicenseURL(void) = 0;				//http://mxplugin.codeplex.com/license
virtual const wchar_t *MXSTDMETHOD GetLibPathFilename(void) = 0;		//filename returned by ::GetModuleFileName() of hModule in DllMain, DLL_PROCESS_ATTACH	

virtual void		MXSTDMETHOD SetErrorOptions( MxError::Level ReportLevel, MxError::LogChannel ReportChannel) = 0; //ReportLevel is MxError::Level, ReportChannel is MxError::LogChannel
virtual int			MXSTDMETHOD GetLastErrorNo() = 0;
virtual const char *MXSTDMETHOD GetLastErrorStr() = 0;
virtual void		MXSTDMETHOD ErrorReset() = 0;
virtual bool		MXSTDMETHOD IsErrorSet() = 0;

virtual const GUID  MXSTDMETHOD GetSocketID(void) = 0;					//GUID provided by SocketImageProcXGUI, ImageCurator, etc - says this Plugin supports this application

virtual bool		MXSTDMETHOD IsInterfaceSupported(const GUID iid) = 0;
virtual int			MXSTDMETHOD GetInterfaceCount() = 0;
virtual const GUID	MXSTDMETHOD GetIID(int index) = 0;
virtual const char *MXSTDMETHOD GetISummary( const GUID  iid) = 0;
virtual const char *MXSTDMETHOD GetIDetails(const GUID  iid) = 0;

};